(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[405],{94233:function(e){var n={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"Query"},variableDefinitions:[{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"name"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"organization"}},type:{kind:"NonNullType",type:{kind:"NamedType",name:{kind:"Name",value:"String"}}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"description"}},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"homepage"}},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"has_issues"}},type:{kind:"NamedType",name:{kind:"Name",value:"Boolean"}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"has_wiki"}},type:{kind:"NamedType",name:{kind:"Name",value:"Boolean"}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"auto_init"}},type:{kind:"NamedType",name:{kind:"Name",value:"Boolean"}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"gitignore_template"}},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"license_template"}},type:{kind:"NamedType",name:{kind:"Name",value:"String"}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"allow_auto_merge"}},type:{kind:"NamedType",name:{kind:"Name",value:"Boolean"}},directives:[]},{kind:"VariableDefinition",variable:{kind:"Variable",name:{kind:"Name",value:"delete_branch_on_merge"}},type:{kind:"NamedType",name:{kind:"Name",value:"Boolean"}},directives:[]}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"repo"},arguments:[{kind:"Argument",name:{kind:"Name",value:"name"},value:{kind:"Variable",name:{kind:"Name",value:"name"}}},{kind:"Argument",name:{kind:"Name",value:"organization"},value:{kind:"Variable",name:{kind:"Name",value:"organization"}}},{kind:"Argument",name:{kind:"Name",value:"description"},value:{kind:"Variable",name:{kind:"Name",value:"description"}}},{kind:"Argument",name:{kind:"Name",value:"homepage"},value:{kind:"Variable",name:{kind:"Name",value:"homepage"}}},{kind:"Argument",name:{kind:"Name",value:"has_issues"},value:{kind:"Variable",name:{kind:"Name",value:"has_issues"}}},{kind:"Argument",name:{kind:"Name",value:"has_wiki"},value:{kind:"Variable",name:{kind:"Name",value:"has_wiki"}}},{kind:"Argument",name:{kind:"Name",value:"auto_init"},value:{kind:"Variable",name:{kind:"Name",value:"auto_init"}}},{kind:"Argument",name:{kind:"Name",value:"gitignore_template"},value:{kind:"Variable",name:{kind:"Name",value:"gitignore_template"}}},{kind:"Argument",name:{kind:"Name",value:"license_template"},value:{kind:"Variable",name:{kind:"Name",value:"license_template"}}},{kind:"Argument",name:{kind:"Name",value:"allow_auto_merge"},value:{kind:"Variable",name:{kind:"Name",value:"allow_auto_merge"}}},{kind:"Argument",name:{kind:"Name",value:"delete_branch_on_merge"},value:{kind:"Variable",name:{kind:"Name",value:"delete_branch_on_merge"}}}],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"name"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"data"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"fullName"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"organization"},arguments:[],directives:[]},{kind:"Field",name:{kind:"Name",value:"url"},arguments:[],directives:[]}]}}]}}],loc:{start:0,end:722}};n.loc.source={body:"query Query(\n  $name: String!\n  $organization: String!\n  $description: String\n  $homepage: String\n  $has_issues: Boolean\n  $has_wiki: Boolean\n  $auto_init: Boolean\n  $gitignore_template: String\n  $license_template: String\n  $allow_auto_merge: Boolean\n  $delete_branch_on_merge: Boolean\n) {\n  repo(\n    name: $name\n    organization: $organization\n    description: $description\n    homepage: $homepage\n    has_issues: $has_issues\n    has_wiki: $has_wiki\n    auto_init: $auto_init\n    gitignore_template: $gitignore_template\n    license_template: $license_template\n    allow_auto_merge: $allow_auto_merge\n    delete_branch_on_merge: $delete_branch_on_merge\n  ) {\n    name\n    data\n    fullName\n    organization\n    url\n  }\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};function a(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var i=e.type;"NamedType"===i.kind&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){a(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){a(e,n)})),e.definitions&&e.definitions.forEach((function(e){a(e,n)}))}var i={};function t(e,n){for(var a=0;a<e.definitions.length;a++){var i=e.definitions[a];if(i.name&&i.name.value==n)return i}}n.definitions.forEach((function(e){if(e.name){var n=new Set;a(e,n),i[e.name.value]=n}})),e.exports=n,e.exports.Query=function(e,n){var a={kind:e.kind,definitions:[t(e,n)]};e.hasOwnProperty("loc")&&(a.loc=e.loc);var l=i[n]||new Set,o=new Set,r=new Set;for(l.forEach((function(e){r.add(e)}));r.size>0;){var d=r;r=new Set,d.forEach((function(e){o.has(e)||(o.add(e),(i[e]||new Set).forEach((function(e){r.add(e)})))}))}return o.forEach((function(n){var i=t(e,n);i&&a.definitions.push(i)})),a}(n,"Query")},24517:function(e){var n={kind:"Document",definitions:[{kind:"OperationDefinition",operation:"query",name:{kind:"Name",value:"Query"},variableDefinitions:[],directives:[],selectionSet:{kind:"SelectionSet",selections:[{kind:"Field",name:{kind:"Name",value:"orgs"},arguments:[],directives:[]}]}}],loc:{start:0,end:23}};n.loc.source={body:"query Query {\n  orgs\n}\n",name:"GraphQL request",locationOffset:{line:1,column:1}};function a(e,n){if("FragmentSpread"===e.kind)n.add(e.name.value);else if("VariableDefinition"===e.kind){var i=e.type;"NamedType"===i.kind&&n.add(i.name.value)}e.selectionSet&&e.selectionSet.selections.forEach((function(e){a(e,n)})),e.variableDefinitions&&e.variableDefinitions.forEach((function(e){a(e,n)})),e.definitions&&e.definitions.forEach((function(e){a(e,n)}))}var i={};function t(e,n){for(var a=0;a<e.definitions.length;a++){var i=e.definitions[a];if(i.name&&i.name.value==n)return i}}n.definitions.forEach((function(e){if(e.name){var n=new Set;a(e,n),i[e.name.value]=n}})),e.exports=n,e.exports.Query=function(e,n){var a={kind:e.kind,definitions:[t(e,n)]};e.hasOwnProperty("loc")&&(a.loc=e.loc);var l=i[n]||new Set,o=new Set,r=new Set;for(l.forEach((function(e){r.add(e)}));r.size>0;){var d=r;r=new Set,d.forEach((function(e){o.has(e)||(o.add(e),(i[e]||new Set).forEach((function(e){r.add(e)})))}))}return o.forEach((function(n){var i=t(e,n);i&&a.definitions.push(i)})),a}(n,"Query")},85356:function(e,n,a){(window.__NEXT_P=window.__NEXT_P||[]).push(["/",function(){return a(64141)}])},64141:function(e,n,a){"use strict";e.exports=a(54586).client},54586:function(e,n,a){"use strict";a.d(n,{client:function(){return D}});var i=a(52322),t=a(2784),l=a(20061),o=a(50284),r=a(44897),d=a(81541),u=a(39201),s=a(17400),m=a(22107),c=a(53278),v=a(38526),k=a(24294),f=a(37328),g=a(96670),h=a(97293),p=a(8521),b=a(24517),_=a.n(b),N=a(94233),S=a.n(N),y=(0,u.styled)("div",{textAlign:"center"}),w=function(){var e,n=(0,t.useState)(""),a=n[0],l=n[1],o=(0,t.useState)(""),r=o[0],u=o[1],b=(0,t.useState)(""),N=b[0],w=b[1],V=(0,t.useState)(""),x=V[0],D=V[1],C=(0,t.useState)(""),E=C[0],A=C[1],$=(0,t.useState)(!0),j=$[0],T=$[1],z=(0,t.useState)(!1),P=z[0],B=z[1],F=(0,t.useState)(!0),L=F[0],Q=F[1],O=(0,t.useState)(!0),q=O[0],R=O[1],X=(0,t.useState)(!1),H=X[0],I=X[1],Z=(0,t.useState)(""),G=Z[0],M=Z[1],U=(0,t.useState)(""),W=U[0],J=U[1],K=(0,t.useState)([]),Y=K[0],ee=K[1],ne=(0,d.Z)((0,h.a)(_(),(0,g.Z)((0,f.Z)({},e),{url:(0,p.config)("GRAPHQL_API_PATH"),accessor:"orgs",initialState:{orgs:[]}})),2),ae=ne[0],ie=ne[1],te=(0,d.Z)(function(e){return(0,h.a)(S(),(0,g.Z)((0,f.Z)({},e),{url:(0,p.config)("GRAPHQL_API_PATH"),accessor:"repo",initialState:{repo:{data:{},name:"",fullName:"",organization:"",url:""}}}))}(),2),le=te[0],oe=te[1];(0,t.useEffect)((function(){ie()}),[]),(0,t.useEffect)((function(){ee(function(e){var n;if((null===(e=e.data)||void 0===e||null===(n=e.orgs)||void 0===n?void 0:n.length)>0)return e.orgs.map((function(e){return{value:e,label:e}})).sort((function(e,n){return e.label>n.label?1:-1}))}(ae))}),[ae]),(0,t.useEffect)((function(){console.log(le),!le.isLoading&&le.data.repo.name&&window.open(le.data.repo.url)}),[le]);return(0,i.jsxs)(y,{children:[(0,i.jsx)(s.X,{color:"$interactive1",children:"Create Repository"}),(0,i.jsx)(v.l,{label:"Owner",placeholder:"Select an Owner",validators:{required:!0},isSearchable:!0,highlighted:!1,value:a,onChange:l,options:Y}),(0,i.jsx)(c.o,{label:"Repository name",validators:{required:!0},value:r,onChange:function(e){u(e.target.value)}}),(0,i.jsx)(c.o,{label:"AIDE ID",validators:{required:!0},value:N,onChange:function(e){w(e.target.value)}}),(0,i.jsx)(c.o,{label:"Description",value:x,onChange:function(e){D(e.target.value)}}),(0,i.jsx)(c.o,{label:"Homepage",value:E,onChange:function(e){A(e.target.value)}}),(0,i.jsx)(k.X,{label:"Has Issues",isChecked:j,onChange:function(e){return T(e.target.checked)}}),(0,i.jsx)(k.X,{label:"Has Wiki",isChecked:P,onChange:function(e){return B(e.target.checked)}}),(0,i.jsx)(k.X,{label:"Auto Init",isChecked:L,onChange:function(e){return Q(e.target.checked)}}),(0,i.jsx)(k.X,{label:"Allow Auto Merge",isChecked:q,onChange:function(e){return R(e.target.checked)}}),(0,i.jsx)(k.X,{label:"Delete Branch on Merge",isChecked:H,onChange:function(e){return I(e.target.checked)}}),(0,i.jsx)(v.l,{label:"Add gitignore",placeholder:"gitignore template: none",isSearchable:!0,value:G,onChange:M,options:[{value:"",label:"None"},{value:"Node",label:"Node"},{value:"Python",label:"Python"}]}),(0,i.jsx)(v.l,{label:"Choose a license",placeholder:"License: none",isSearchable:!0,value:W,onChange:J,options:[{value:"",label:"None"},{value:"apache",label:"Apache License 2.0"},{value:"gnu",label:"GNU General Public License v3.0"},{value:"mit",label:"MIT License"},{value:"bsd",label:'BSD 2-Clause "Simplified" License'},{value:"mozilla",label:"Mozilla Public License 2.0"},{value:"eclipse",label:"Eclipse Public License 2.0"},{value:"cc",label:"Creative Commons Zero v1.0 Universal"}]}),(0,i.jsx)(m.z,{type:"submit",onClick:function(){oe({variables:{name:r,organization:a,description:x,homepage:E,has_issues:j,has_wiki:P,auto_init:L,gitignore_template:G,license_template:W,allow_auto_merge:q,delete_branch_on_merge:H}})},children:"Create Repository"})]})},V=function(){return(0,i.jsxs)(r.F.Routes,{children:[(0,i.jsx)(r.F.Route,{path:"/home",element:(0,i.jsx)(w,{})}),(0,i.jsx)(r.F.Route,{path:"/",element:(0,i.jsx)(w,{})})]})},x=(0,l.createTheme)("uhg"),D=function(){return(0,i.jsx)(o.n,{theme:x,children:(0,i.jsx)(V,{})})}}},function(e){e.O(0,[774,364,888,179],(function(){return n=85356,e(e.s=n);var n}));var n=e.O();_N_E=n}]);